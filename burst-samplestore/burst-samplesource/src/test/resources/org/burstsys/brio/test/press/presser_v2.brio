/*
 * Burst - presser schema
 * This motif/brio schema is used to test pressing/lattice read/write
 * Note that you can pretty much always add relations/structures etc
 * but you *cannot* change existing relations in any way, and you
 * cannot *delete* anything. You must keep ordinals consistent even within
 * type hierarchies
 */
schema Presser {

    version: 2

    // all traversal paths start with what is a special root relation in the schema itself
    root) 'root' : RootStructure

    structure RootStructure {
        0) f0 : string key
        1) f1 : long ordinal
        2) f2 : short
        3) f3 : SecondLevelStructure
        4) f4 : vector[SecondLevelStructure]
        5) added : AddedStructure // added field
        6) application : ApplicationStructure // For testing Unity schema
    }

    structure SecondLevelStructure {
        0) f0 : long key
        1) f1 : long ordinal
        2) f2 : double
        3) f3 : vector[ThirdLevelStructure]
        4) f4 : ThirdLevelStructure
    }

    structure ThirdLevelStructure {
        0) f0 : long key
        1) f1 : long ordinal
        2) f2 : map[string,string]
        3) 'f3' : vector[double] // you can use quotes to avoid keywords
    }

    // an example of a added structure in version 2 that was not in v1
    structure AddedStructure {
        0) f0 : string key
        1) f1 : double ordinal
        2) f2 : vector[string]
        3) f3: boolean
        4) f4: boolean
    }

    // For testing Unity: siblings of the same type confirms uniqueness of paths
    structure ApplicationStructure {
        0) firstUse : UseStructure
        1) mostUse : UseStructure
        2) lastUse : UseStructure
    }

    structure UseStructure {
        0) tag : string key
    }

}
